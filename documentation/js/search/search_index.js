var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.253,1,2.215]],["body/controllers/AppController.html",[0,1.97,1,3.484,2,1.556,3,0.313,4,0.272,5,0.272,6,3.499,7,0.645,8,1.712,9,5.114,10,1.449,11,0.027,12,0.819,13,4.15,14,1.351,15,1.293,16,0.397,17,0.759,18,3.173,19,3.499,20,0.313,21,0.101,22,2.1,23,1.556,24,1.351,25,4.15,26,0.021,27,0.021]],["title/modules/AppModule.html",[28,1.253,29,2.215]],["body/modules/AppModule.html",[1,3.168,2,1.535,3,0.216,4,0.188,5,0.188,11,0.027,16,0.464,17,0.524,18,3.154,19,2.418,20,0.216,21,0.07,26,0.016,27,0.016,28,1.791,29,4.291,30,1.341,31,1.341,32,1.577,33,1.577,34,1.341,35,2.628,36,1.577,37,2.418,38,2.418,39,2.418,40,3.448,41,3.448,42,3.448,43,3.154,44,2.253,45,1.577,46,1.577,47,2.868,48,2.463,49,2.868,50,2.868,51,2.418,52,3.858,53,1.901,54,1.901,55,1.075,56,2.868,57,2.418,58,2.868,59,2.868,60,2.868,61,1.577,62,2.868,63,2.418,64,2.868,65,2.868,66,2.418]],["title/injectables/AppService.html",[18,1.838,67,0.66]],["body/injectables/AppService.html",[3,0.33,4,0.287,5,0.287,7,0.681,8,1.77,9,5.214,11,0.027,12,0.864,14,1.426,15,1.337,16,0.33,17,0.8,18,2.99,20,0.33,21,0.106,24,1.426,26,0.022,27,0.022,67,1.073,68,1.764,69,3.693,70,4.379,71,4.379,72,4.379]],["title/controllers/AuthController.html",[0,1.253,73,2.215]],["body/controllers/AuthController.html",[0,1.028,2,1.028,3,0.207,4,0.18,5,0.18,7,0.426,8,1.291,10,1.627,11,0.027,12,0.92,14,1.517,16,0.45,17,0.501,20,0.207,21,0.067,22,1.387,23,1.028,24,1.517,26,0.016,27,0.016,73,2.629,74,2.312,75,1.817,76,2.742,77,3.966,78,3.966,79,3.966,80,2.742,81,3.275,82,2.742,83,2.742,84,1.747,85,1.067,86,0.991,87,1.627,88,2.742,89,3.07,90,5.107,91,2.742,92,3.966,93,2.742,94,2.742,95,2.742,96,1.817,97,1.817,98,2.742,99,2.358,100,2.029,101,2.312,102,2.312,103,1.508,104,2.742,105,2.029,106,2.742,107,2.742,108,2.742,109,1.817,110,3.966,111,2.742,112,1.817,113,2.742,114,2.742,115,2.742,116,2.742,117,2.742,118,2.742,119,2.742,120,2.742,121,2.742,122,2.742]],["title/guards/AuthGuard.html",[103,1.838,123,2.473]],["body/guards/AuthGuard.html",[3,0.234,4,0.203,5,0.203,7,0.482,8,1.41,11,0.027,12,0.855,14,1.01,16,0.327,17,0.567,20,0.234,21,0.075,22,1.57,24,1.01,26,0.017,27,0.017,61,1.706,67,0.855,84,1.623,85,0.991,86,0.921,87,1.512,103,2.381,124,3.102,125,2.616,126,2.162,127,5.399,128,1.57,129,3.102,130,4.961,131,3.102,132,4.33,133,4.553,134,3.102,135,2.616,136,1.451,137,5.399,138,2.056,139,3.102,140,2.732,141,3.102,142,3.102,143,4.33,144,3.102,145,3.307,146,2.999,147,4.33,148,3.102,149,2.616,150,2.616,151,2.616,152,1.865,153,3.102,154,3.102,155,1.451,156,3.102,157,2.616,158,3.102]],["title/classes/AuthLoginDto.html",[21,0.081,89,2.01]],["body/classes/AuthLoginDto.html",[3,0.298,4,0.259,5,0.259,7,0.613,10,1.777,11,0.026,12,1.004,15,1.464,16,0.298,20,0.298,21,0.124,26,0.02,27,0.02,86,1.082,89,3.059,155,2.634,159,1.478,160,4.75,161,3.325,162,2.205,163,3.098,164,3.325,165,3.944,166,3.944,167,3.944,168,4.29,169,3.733,170,3.372,171,3.325,172,3.325,173,2.371,174,3.325,175,3.325]],["title/modules/AuthModule.html",[28,1.253,40,2.01]],["body/modules/AuthModule.html",[2,1.483,3,0.206,4,0.179,5,0.179,11,0.027,16,0.458,17,0.5,20,0.206,21,0.066,26,0.016,27,0.016,28,1.744,30,1.278,31,1.278,32,1.503,33,1.503,34,1.278,35,2.558,36,1.503,40,3.796,43,3.103,44,2.176,45,1.503,46,1.503,48,2.797,51,3.337,52,3.773,53,1.811,57,2.305,61,2.176,63,2.305,66,2.305,73,3.083,99,2.855,100,2.022,126,1.185,138,1.811,176,2.305,177,2.733,178,2.305,179,3.392,180,3.392,181,2.733,182,2.733,183,2.733,184,2.733,185,3.957,186,1.503,187,2.733,188,2.733,189,3.957,190,3.957,191,2.733,192,3.957,193,3.957,194,2.733,195,2.733,196,2.305,197,2.733]],["title/injectables/AuthService.html",[67,0.66,99,1.691]],["body/injectables/AuthService.html",[3,0.203,4,0.176,5,0.176,7,0.418,8,1.274,11,0.027,12,0.772,14,0.876,16,0.406,17,0.492,20,0.203,21,0.065,23,1.009,24,1.274,26,0.015,27,0.015,67,0.772,68,1.084,81,1.98,84,1.467,85,0.896,86,0.832,87,1.366,89,3.044,99,1.98,101,2.269,102,2.269,126,1.999,128,1.98,130,4.883,136,1.258,138,1.784,140,2.84,151,2.269,152,2.772,155,2.156,163,1.48,198,2.269,199,3.913,200,2.691,201,2.367,202,2.691,203,3.299,204,3.913,205,2.691,206,4.611,207,2.269,208,2.691,209,2.691,210,1.991,211,2.352,212,2.269,213,3.913,214,2.691,215,2.691,216,3.299,217,2.691,218,2.691,219,2.691,220,2.691,221,2.691,222,4.611,223,2.691,224,2.691,225,2.691,226,2.691,227,2.691,228,2.269,229,2.691,230,2.691,231,2.691,232,3.913,233,2.269]],["title/classes/CreateHealthRecordDto.html",[21,0.081,234,1.838]],["body/classes/CreateHealthRecordDto.html",[3,0.243,4,0.211,5,0.211,7,0.5,10,2.01,11,0.027,12,1.136,15,1.586,16,0.243,20,0.243,21,0.108,26,0.018,27,0.018,85,0.736,86,1.266,159,1.206,162,1.925,169,3.944,170,3.944,173,1.934,234,2.442,235,5.017,236,2.38,237,4.288,238,4.288,239,4.288,240,3.763,241,3.371,242,4.852,243,3.217,244,3.217,245,3.217,246,2.38,247,3.217,248,3.217,249,2.38,250,2.132,251,1.934,252,2.712]],["title/classes/CreateMasterServiceDto.html",[21,0.081,253,1.838]],["body/classes/CreateMasterServiceDto.html",[3,0.285,4,0.247,5,0.247,7,0.587,10,1.926,11,0.026,12,1.088,15,1.533,16,0.285,20,0.285,21,0.12,26,0.02,27,0.02,85,1.262,86,1.173,159,1.414,162,2.143,169,3.878,170,3.878,173,2.268,242,4.65,251,3.315,253,2.719,254,4.934,255,2.792,256,3.655,257,3.773,258,3.773,259,3.773]],["title/classes/CreateUserDto.html",[21,0.081,260,1.838]],["body/classes/CreateUserDto.html",[3,0.227,4,0.197,5,0.197,7,0.467,10,2.09,11,0.027,12,1.181,15,1.604,16,0.227,20,0.227,21,0.103,26,0.017,27,0.017,86,1.273,155,2.293,159,1.127,162,1.836,163,2.697,164,2.535,168,3.572,169,4.22,170,3.251,171,2.535,172,2.535,173,1.807,174,2.535,175,2.535,260,2.329,261,5.152,262,2.224,263,4.136,264,4.136,265,4.136,266,4.136,267,4.136,268,3.006,269,3.006,270,3.006,271,3.006,272,3.006,273,3.006,274,3.006,275,3.006]],["title/classes/HealthRecord.html",[21,0.081,276,2.01]],["body/classes/HealthRecord.html",[3,0.206,4,0.179,5,0.179,7,0.425,10,1.97,11,0.027,12,1.114,15,1.58,16,0.299,20,0.299,21,0.066,26,0.016,27,0.016,55,1.024,61,2.558,85,0.626,86,1.356,140,1.383,159,1.024,162,1.715,237,3.922,238,3.922,239,3.922,240,3.442,241,3.083,246,2.022,249,2.022,251,1.643,252,2.305,276,2.379,277,2.022,278,3.442,279,2.928,280,2.928,281,2.928,282,2.928,283,2.733,284,4.622,285,2.733,286,2.733,287,2.733,288,2.733,289,2.733,290,2.176,291,2.022,292,2.022,293,1.383,294,1.383,295,2.022,296,2.022,297,1.383,298,2.733,299,1.811,300,2.305]],["title/controllers/HealthRecordsController.html",[0,1.253,301,2.215]],["body/controllers/HealthRecordsController.html",[0,1.024,2,1.024,3,0.206,4,0.179,5,0.179,7,0.425,8,1.289,10,1.382,11,0.028,12,0.781,14,1.289,15,1.388,16,0.385,17,0.5,20,0.206,21,0.066,22,1.383,23,1.024,24,1.837,26,0.016,27,0.016,75,1.811,84,1.483,85,0.906,86,0.842,87,1.382,96,2.623,97,3.083,234,3.103,240,2.022,241,2.623,297,2.354,301,2.623,302,2.305,303,1.715,304,3.337,305,2.305,306,2.733,307,2.305,308,3.957,309,2.733,310,2.022,311,2.558,312,2.305,313,1.503,314,2.928,315,3.066,316,1.503,317,2.733,318,2.022,319,2.733,320,2.733,321,2.733,322,1.643,323,2.733,324,2.022,325,2.022,326,2.733,327,2.022,328,1.643,329,2.305,330,2.733,331,2.022,332,2.022,333,2.733]],["title/modules/HealthRecordsModule.html",[28,1.253,41,2.01]],["body/modules/HealthRecordsModule.html",[2,1.797,3,0.272,4,0.236,5,0.236,11,0.027,16,0.451,17,0.658,20,0.272,21,0.087,26,0.019,27,0.019,28,2.02,30,1.684,31,1.684,32,1.981,33,1.981,34,1.684,35,2.964,36,1.981,41,3.699,44,2.637,45,1.981,46,1.981,48,2.165,54,2.387,55,1.35,85,0.824,276,2.165,290,1.981,299,3.178,301,3.572,311,3.384,312,3.037,334,3.037,335,3.037,336,3.602,337,3.602,338,3.037,339,2.665,340,3.602]],["title/injectables/HealthRecordsService.html",[67,0.66,311,1.838]],["body/injectables/HealthRecordsService.html",[3,0.164,4,0.143,5,0.143,7,0.339,8,1.089,11,0.027,12,0.9,14,1.485,15,1.276,16,0.392,17,0.398,20,0.164,21,0.053,23,0.817,24,1.69,26,0.013,27,0.013,55,0.817,67,0.66,68,0.878,84,1.709,85,1.044,86,0.97,87,1.592,126,2.477,128,1.692,136,1.563,140,1.103,145,3.022,146,2.956,150,3.429,152,2.01,157,3.429,211,1.311,234,2.854,241,2.216,250,2.216,276,2.956,294,1.103,297,2.488,303,1.449,304,2.819,305,2.819,307,2.819,311,1.839,313,1.199,314,2.474,315,2.445,316,1.199,338,1.838,341,1.838,342,2.216,343,2.18,344,3.374,345,2.18,346,3.343,347,2.18,348,2.18,349,2.474,350,2.18,351,1.838,352,1.613,353,2.18,354,2.18,355,3.374,356,1.613,357,4.066,358,3.429,359,2.18,360,2.18,361,3.343,362,2.18,363,2.18,364,2.18,365,1.311,366,1.613,367,1.311,368,1.613]],["title/injectables/JwtStrategy.html",[67,0.66,179,2.01]],["body/injectables/JwtStrategy.html",[3,0.236,4,0.205,5,0.205,7,0.486,8,1.417,11,0.027,12,0.859,14,1.017,15,0.769,16,0.43,17,0.571,20,0.236,21,0.076,23,1.171,24,1.017,26,0.017,27,0.017,52,4.363,53,2.071,67,0.859,68,1.258,84,1.631,85,0.996,86,1.152,87,1.52,126,2.171,128,2.202,136,1.461,155,2.035,179,2.616,186,1.718,196,2.635,201,2.532,203,4.223,211,1.879,212,2.635,246,3.22,369,2.635,370,2.202,371,3.67,372,4.223,373,3.67,374,3.125,375,3.125,376,4.352,377,3.125,378,3.125,379,2.635,380,3.125,381,2.635,382,2.312,383,3.125,384,2.635,385,3.125,386,3.125,387,3.125,388,3.125,389,3.125,390,3.125]],["title/injectables/LocalStrategy.html",[67,0.66,180,2.01]],["body/injectables/LocalStrategy.html",[3,0.253,4,0.22,5,0.22,7,0.521,8,1.488,11,0.027,12,0.902,14,1.092,15,1.482,16,0.421,17,0.613,20,0.253,21,0.081,22,1.697,23,1.257,24,1.092,26,0.018,27,0.018,67,0.902,68,1.35,84,1.712,85,1.046,86,0.972,87,1.595,99,3.049,100,2.481,126,2.253,128,1.697,136,1.568,155,2.43,163,3.069,180,2.747,186,1.844,370,2.312,371,3.852,373,3.852,379,2.827,381,2.827,382,2.481,384,2.827,391,2.827,392,3.353,393,3.353,394,4.568,395,3.353,396,2.827,397,3.353,398,3.353]],["title/classes/MasterService.html",[21,0.081,399,2.01]],["body/classes/MasterService.html",[3,0.253,4,0.22,5,0.22,7,0.521,10,1.949,11,0.027,12,1.102,15,1.482,16,0.345,20,0.345,21,0.081,26,0.018,27,0.018,55,1.257,61,2.858,85,1.19,86,1.242,140,1.697,159,1.257,162,1.98,251,3.124,256,3.444,278,3.845,279,3.38,280,2.481,281,2.481,282,3.38,284,4.643,290,2.512,291,2.481,292,2.481,293,1.697,294,1.697,295,2.481,296,2.481,399,2.747,400,2.481,401,3.353,402,3.353,403,3.353,404,3.353,405,2.222,406,2.827]],["title/controllers/MasterServicesController.html",[0,1.253,407,2.215]],["body/controllers/MasterServicesController.html",[0,0.958,2,0.958,3,0.193,4,0.168,5,0.168,7,0.398,8,1.227,10,1.84,11,0.027,12,1.04,14,1.715,15,1.469,16,0.373,17,0.467,20,0.193,21,0.062,22,1.294,23,0.958,24,1.715,26,0.015,27,0.015,75,1.695,84,1.852,85,1.131,86,1.051,87,1.725,96,2.498,97,2.967,253,3.031,297,2.789,303,1.634,310,1.892,313,1.406,316,1.406,318,1.892,322,2.97,324,2.789,325,1.892,327,2.789,328,2.691,329,2.156,331,2.789,332,1.892,342,2.498,349,1.892,365,1.537,367,1.537,407,2.498,408,2.156,409,2.557,410,2.498,411,2.156,412,2.557,413,2.557,414,2.557,415,2.557,416,3.517,417,2.557,418,2.156,419,2.156,420,2.462,421,2.156,422,2.789,423,2.557,424,2.557,425,2.557,426,2.557,427,2.557,428,2.557]],["title/modules/MasterServicesModule.html",[28,1.253,42,2.01]],["body/modules/MasterServicesModule.html",[2,1.797,3,0.272,4,0.236,5,0.236,11,0.027,16,0.451,17,0.658,20,0.272,21,0.087,26,0.019,27,0.019,28,2.02,30,1.684,31,1.684,32,1.981,33,1.981,34,1.684,35,2.964,36,1.981,42,3.699,44,2.637,45,1.981,46,1.981,48,2.165,54,2.387,55,1.35,85,0.824,290,1.981,339,2.665,399,2.165,405,3.178,407,3.572,420,3.384,421,3.037,429,3.037,430,3.037,431,3.602,432,3.602,433,3.037,434,3.602]],["title/injectables/MasterServicesService.html",[67,0.66,420,1.838]],["body/injectables/MasterServicesService.html",[3,0.177,4,0.154,5,0.154,7,0.365,8,1.153,11,0.027,12,1.055,14,1.805,15,1.166,16,0.403,17,0.43,20,0.177,21,0.057,23,0.881,24,1.74,26,0.014,27,0.014,55,0.881,67,0.699,68,0.947,84,1.905,85,1.164,86,1.082,87,1.775,126,1.846,128,1.791,145,1.558,146,2.128,152,1.413,211,1.413,250,3.87,253,2.796,294,1.189,297,2.703,303,1.534,313,1.292,316,1.292,322,2.849,328,2.128,342,2.346,344,3.507,349,2.619,351,1.982,352,1.739,355,3.762,356,1.739,358,1.982,365,2.128,366,1.739,367,2.128,368,1.739,399,3.056,410,2.346,411,2.985,416,3.333,420,1.947,422,2.619,433,1.982,435,1.982,436,2.35,437,2.35,438,3.54,439,2.35,440,2.35,441,2.35,442,2.35,443,2.35,444,2.35,445,2.35,446,2.35,447,2.35,448,2.35,449,2.35]],["title/injectables/PassportJwtAuthGuard.html",[67,0.66,112,2.215]],["body/injectables/PassportJwtAuthGuard.html",[3,0.346,4,0.301,5,0.301,11,0.026,16,0.422,17,0.838,20,0.346,21,0.111,26,0.022,27,0.022,67,1.104,68,1.847,103,2.522,112,3.707,186,2.522,370,2.83,450,3.394,451,3.867,452,5.594]],["title/injectables/PassportLocalGuard.html",[67,0.66,109,2.215]],["body/injectables/PassportLocalGuard.html",[3,0.346,4,0.301,5,0.301,11,0.026,16,0.422,17,0.838,20,0.346,21,0.111,26,0.022,27,0.022,67,1.104,68,1.847,103,2.522,109,3.707,186,2.522,370,2.83,450,3.394,453,3.867,454,5.594]],["title/classes/UpdateHealthRecordDto.html",[21,0.081,315,2.01]],["body/classes/UpdateHealthRecordDto.html",[3,0.344,4,0.299,5,0.299,11,0.026,16,0.421,20,0.344,21,0.111,26,0.022,27,0.022,159,1.71,234,2.509,236,3.376,293,2.309,303,1.978,314,3.376,315,3.352,370,2.821,455,3.847,456,5.576,457,3.376,458,3.024]],["title/classes/UpdateMasterServiceDto.html",[21,0.081,416,2.01]],["body/classes/UpdateMasterServiceDto.html",[3,0.344,4,0.299,5,0.299,11,0.026,16,0.421,20,0.344,21,0.111,26,0.022,27,0.022,159,1.71,253,2.509,255,3.376,293,2.309,303,1.978,370,2.821,416,3.352,422,3.376,457,3.376,458,3.024,459,3.847,460,5.576]],["title/classes/UpdateUserDto.html",[21,0.081,461,2.01]],["body/classes/UpdateUserDto.html",[3,0.344,4,0.299,5,0.299,11,0.026,16,0.421,20,0.344,21,0.111,26,0.022,27,0.022,159,1.71,260,2.509,262,3.376,293,2.309,303,1.978,370,2.821,457,3.376,458,3.024,461,3.352,462,3.847,463,5.576,464,3.376]],["title/classes/User.html",[21,0.081,81,1.691]],["body/classes/User.html",[3,0.199,4,0.173,5,0.173,7,0.41,10,2.101,11,0.027,12,1.188,15,1.592,16,0.291,20,0.291,21,0.064,26,0.015,27,0.015,55,0.987,61,2.932,81,1.949,86,1.301,87,1.345,140,1.333,155,2.13,159,0.987,162,1.67,163,2.505,263,3.841,264,3.841,265,3.841,266,3.841,267,3.841,278,3.37,279,2.851,280,1.949,281,1.949,282,2.851,284,4.816,290,2.119,291,1.949,292,1.949,293,1.333,294,1.333,295,1.949,296,1.949,465,1.949,466,4.555,467,2.634,468,2.634,469,2.634,470,2.634,471,2.634,472,2.634,473,2.634,474,2.634,475,2.634,476,2.634,477,2.634,478,1.746,479,2.221]],["title/controllers/UsersController.html",[0,1.253,480,2.215]],["body/controllers/UsersController.html",[0,0.99,2,0.99,3,0.199,4,0.173,5,0.173,7,0.411,8,1.257,10,1.753,11,0.027,12,0.991,14,1.634,15,1.416,16,0.379,17,0.483,20,0.199,21,0.064,22,1.337,23,0.99,24,1.738,26,0.015,27,0.015,75,1.751,84,1.71,85,1.044,86,0.971,87,1.593,96,2.559,97,3.024,126,1.978,136,1.235,201,2.133,260,3.066,297,2.702,303,1.674,310,1.955,313,1.453,316,1.453,318,1.955,322,3.017,324,1.955,325,1.955,327,2.857,328,2.321,331,2.857,332,1.955,365,1.588,367,1.588,410,2.559,418,2.228,419,2.228,461,3.549,464,2.857,480,2.559,481,2.228,482,2.228,483,2.228,484,2.642,485,2.642,486,2.642,487,2.642,488,2.228,489,2.642,490,2.642,491,2.642,492,2.642,493,2.642,494,2.642,495,2.642]],["title/modules/UsersModule.html",[28,1.253,43,1.838]],["body/modules/UsersModule.html",[2,1.744,3,0.26,4,0.226,5,0.226,11,0.027,16,0.445,17,0.63,20,0.26,21,0.084,26,0.018,27,0.018,28,1.975,30,1.611,31,1.611,32,1.895,33,1.895,34,1.611,35,2.898,36,2.898,43,3.415,44,2.559,45,1.895,46,1.895,48,2.071,54,2.284,55,1.291,81,1.743,85,0.789,201,3.075,290,1.895,339,2.549,478,3.085,480,3.493,488,2.905,496,2.905,497,2.905,498,2.905,499,3.445,500,3.445,501,2.905,502,3.445]],["title/injectables/UsersService.html",[67,0.66,201,1.563]],["body/injectables/UsersService.html",[3,0.157,4,0.136,5,0.136,7,0.324,8,1.05,11,0.027,12,1.005,14,1.658,15,0.971,16,0.401,17,0.38,20,0.157,21,0.051,23,0.78,24,1.658,26,0.013,27,0.013,55,0.78,67,0.637,68,0.838,81,2.688,84,1.805,85,1.102,86,1.024,87,1.681,126,2.208,128,1.632,136,1.508,140,1.999,145,2.138,146,2.675,152,2.675,155,0.973,163,1.145,201,1.508,207,1.755,210,1.54,211,1.251,216,1.755,233,1.755,250,3.376,260,2.801,294,1.053,297,2.251,303,1.398,313,1.145,316,1.145,322,2.675,328,1.939,342,2.138,344,3.292,352,1.54,355,3.292,356,1.54,365,1.939,366,1.54,367,1.939,368,1.54,410,2.138,461,3.194,464,2.387,482,1.755,483,2.72,501,1.755,503,1.755,504,2.081,505,2.081,506,3.226,507,2.081,508,2.081,509,3.226,510,4.449,511,2.081,512,2.081,513,2.081,514,2.081,515,2.081,516,2.081,517,2.081,518,2.081,519,3.226,520,3.226,521,2.081,522,2.081,523,2.081,524,2.081,525,2.081,526,2.081,527,3.226,528,2.081,529,2.081,530,1.755,531,2.081,532,2.081,533,2.081,534,2.081,535,2.081,536,2.081]],["title/coverage.html",[537,3.373]],["body/coverage.html",[0,1.908,1,1.562,5,0.154,6,1.987,11,0.027,18,1.296,21,0.145,26,0.014,27,0.014,34,1.102,67,1.153,69,1.987,73,1.562,74,1.987,81,1.192,86,0.501,89,1.417,99,1.192,103,1.296,105,1.744,109,1.562,112,1.562,123,1.744,125,1.987,146,1.417,160,1.987,161,1.987,179,1.417,180,1.417,198,1.987,201,1.102,234,1.296,235,1.987,236,2.625,253,1.296,254,1.987,255,2.625,260,1.296,261,1.987,262,2.625,276,1.417,277,2.625,299,1.562,301,1.562,302,1.987,311,1.296,315,1.417,341,1.987,369,1.987,391,1.987,399,1.417,400,2.625,405,1.562,407,1.562,408,1.987,416,1.417,420,1.296,435,1.987,450,2.625,451,1.987,453,1.987,455,1.987,459,1.987,461,1.417,462,1.987,465,2.625,478,1.562,480,1.562,481,1.987,503,1.987,537,1.744,538,2.357,539,2.357,540,2.357,541,6.725,542,3.547,543,3.547,544,5.348,545,2.991,546,2.991,547,5.09,548,6.046,549,1.987,550,3.547,551,4.265,552,4.265,553,1.987,554,2.357,555,2.357,556,2.357,557,2.357,558,2.357]],["title/dependencies.html",[31,1.879,559,2.355]],["body/dependencies.html",[11,0.027,17,0.727,21,0.097,26,0.02,27,0.02,31,1.861,53,2.638,55,1.492,138,2.638,173,2.393,186,2.189,210,2.945,293,2.014,294,2.014,372,3.356,382,4.186,396,3.356,458,2.638,560,5.657,561,3.98,562,3.98,563,3.98,564,3.98,565,3.98,566,3.98,567,3.98,568,3.98,569,3.98,570,3.98,571,3.98,572,3.98,573,3.98,574,3.98,575,3.98,576,3.98,577,3.98,578,3.98]],["title/miscellaneous/functions.html",[579,1.851,580,3.389]],["body/miscellaneous/functions.html",[7,0.788,11,0.024,26,0.024,27,0.024,34,2.944,553,4.271,579,3.357,580,4.271,581,5.066]],["title/index.html",[7,0.434,582,2.793,583,2.793]],["body/index.html",[4,0.221,11,0.026,26,0.018,27,0.018,228,2.838,251,2.023,256,2.231,537,2.49,584,3.366,585,3.366,586,4.58,587,3.366,588,3.366,589,3.366,590,3.366,591,3.366,592,3.366,593,5.207,594,3.366,595,3.366,596,3.366,597,5.207,598,6.172,599,3.366,600,3.366,601,3.366,602,6.032,603,3.366,604,3.366,605,4.58,606,3.366,607,3.366,608,3.366,609,4.58,610,4.58,611,3.366,612,3.366,613,3.366,614,4.58,615,4.58,616,3.366,617,3.366,618,3.366,619,3.366,620,3.366,621,2.838,622,3.366,623,3.366,624,3.366,625,3.366,626,3.366,627,3.366,628,3.366,629,3.366,630,3.366,631,3.366,632,2.838,633,3.366,634,3.366,635,3.366,636,3.366,637,3.366,638,3.366,639,2.838]],["title/modules.html",[30,2.132]],["body/modules.html",[11,0.022,26,0.022,27,0.022,29,3.04,30,2.145,40,2.757,41,2.757,42,2.757,43,2.522,621,5.432,640,6.443,641,6.443,642,6.443]],["title/overview.html",[643,3.844]],["body/overview.html",[2,1.184,11,0.026,18,2.77,26,0.017,27,0.017,28,1.184,29,4.296,30,1.477,31,1.477,32,1.737,33,1.737,34,1.477,35,1.737,36,1.737,37,2.663,38,2.663,39,2.663,40,3.864,41,3.437,42,3.437,43,3.337,44,2.411,45,1.737,46,1.737,68,1.272,99,2.549,123,2.337,149,2.663,159,1.184,176,2.663,178,2.663,179,3.028,180,3.028,201,2.837,311,2.77,334,2.663,335,2.663,420,2.77,429,2.663,430,2.663,496,2.663,497,2.663,498,2.663,530,2.663,643,2.663,644,4.385,645,3.158]],["title/properties.html",[162,1.742,559,2.355]],["body/properties.html",[11,0.026,26,0.023,27,0.023,162,2.158,256,3.3,632,4.198,639,4.198,646,4.979,647,4.979,648,4.979]],["title/miscellaneous/variables.html",[579,1.851,649,3.389]],["body/miscellaneous/variables.html",[7,0.619,11,0.026,26,0.02,27,0.02,105,3.787,133,4.315,135,4.315,136,1.861,249,4.571,277,2.945,299,3.392,300,3.356,400,2.945,405,3.392,406,3.356,465,2.945,478,3.392,479,3.356,545,3.356,546,4.77,549,4.315,579,2.638,649,3.356,650,5.118,651,3.98,652,3.98,653,3.98,654,6.178,655,3.98,656,3.98,657,3.98,658,3.98]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":647,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["1.0.0",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":530,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["10.0.0",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["360d",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.1",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":644,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["8.8.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":645,"title":{},"body":{"overview.html":{}}}],["_data",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":278,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":355,"title":{},"body":{"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":356,"title":{},"body":{"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["already",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["amazing",{"_index":622,"title":{},"body":{"index.html":{}}}],["api",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["app",{"_index":600,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":592,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":73,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticate(data",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":103,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"coverage.html":{}}}],["authguard('jwt",{"_index":452,"title":{},"body":{"injectables/PassportJwtAuthGuard.html":{}}}],["authguard('local",{"_index":454,"title":{},"body":{"injectables/PassportLocalGuard.html":{}}}],["authlogindto",{"_index":89,"title":{"classes/AuthLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":632,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authorization.split",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authservice",{"_index":99,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":282,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["await",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":623,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":351,"title":{},"body":{"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{}}}],["badrequestexception(e",{"_index":363,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["badrequestexception(error",{"_index":358,"title":{},"body":{"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{}}}],["bcryptjs",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["birthdate",{"_index":263,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["body",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":642,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":640,"title":{},"body":{"modules.html":{}}}],["building",{"_index":587,"title":{},"body":{"index.html":{}}}],["burns",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["canactivate",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catch",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HealthRecordsService.html":{}}}],["catch((e",{"_index":362,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["catch((error",{"_index":448,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["checkifuserexist",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthLoginDto.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":159,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_healthrecordsmodule",{"_index":334,"title":{},"body":{"modules/HealthRecordsModule.html":{},"overview.html":{}}}],["cluster_healthrecordsmodule_providers",{"_index":335,"title":{},"body":{"modules/HealthRecordsModule.html":{},"overview.html":{}}}],["cluster_masterservicesmodule",{"_index":429,"title":{},"body":{"modules/MasterServicesModule.html":{},"overview.html":{}}}],["cluster_masterservicesmodule_providers",{"_index":430,"title":{},"body":{"modules/MasterServicesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":496,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":497,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":498,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["compare",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["configmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.getorthrow('jwt_access_token_expiration_ms",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.getorthrow('jwt_access_token_secret",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.getorthrow('mongodb_uri",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/HealthRecord.html":{},"injectables/HealthRecordsService.html":{},"classes/MasterService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":392,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(healthrecordmodel",{"_index":343,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["constructor(jwtservice",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(masterservicemodel",{"_index":436,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/HealthRecordsController.html":{},"injectables/LocalStrategy.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["constructor(usermodel",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('records",{"_index":317,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["controller('services",{"_index":423,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["controller('users",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":537,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":303,"title":{},"body":{"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":318,"title":{},"body":{"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["create(createhealthrecorddto",{"_index":305,"title":{},"body":{"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{}}}],["create(createmasterservicedto",{"_index":411,"title":{},"body":{"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{}}}],["create(createuserdto",{"_index":483,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createhealthrecorddto",{"_index":234,"title":{"classes/CreateHealthRecordDto.html":{}},"body":{"classes/CreateHealthRecordDto.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"classes/UpdateHealthRecordDto.html":{},"coverage.html":{}}}],["createmasterservicedto",{"_index":253,"title":{"classes/CreateMasterServiceDto.html":{}},"body":{"classes/CreateMasterServiceDto.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"classes/UpdateMasterServiceDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuser",{"_index":527,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":260,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentuser",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["custom_decorator/current",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["data",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["datas",{"_index":361,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["date",{"_index":237,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/HealthRecord.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":419,"title":{},"body":{"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":331,"title":{},"body":{"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":256,"title":{},"body":{"classes/CreateMasterServiceDto.html":{},"classes/MasterService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":601,"title":{},"body":{"index.html":{}}}],["disable",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["documentation",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["dto/auth",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/create",{"_index":313,"title":{},"body":{"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":316,"title":{},"body":{"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["e2e",{"_index":611,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":588,"title":{},"body":{"index.html":{}}}],["email",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":357,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["eslint",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["eslint/no",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":597,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["expiresin",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":380,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":386,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["false",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filterquery",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":322,"title":{},"body":{"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findallbyuserid",{"_index":304,"title":{},"body":{"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{}}}],["findallbyuserid(@param('user_id",{"_index":320,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["findallbyuserid(user_id",{"_index":307,"title":{},"body":{"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{}}}],["findone",{"_index":342,"title":{},"body":{"injectables/HealthRecordsService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":325,"title":{},"body":{"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":349,"title":{},"body":{"injectables/HealthRecordsService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{}}}],["findone(query",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["first_name",{"_index":264,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["found",{"_index":536,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":586,"title":{},"body":{"index.html":{}}}],["function",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":580,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general_note",{"_index":238,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/HealthRecord.html":{}}}],["get(':id",{"_index":324,"title":{},"body":{"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["get('me",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('user/:user_id",{"_index":308,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["getcurrentuserbycontext",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcurrentuserbycontext(context",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":582,"title":{"index.html":{}},"body":{}}],["getuserinfo",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuserinfo(@currentuser",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuserinfo(user",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["global",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["grow",{"_index":618,"title":{},"body":{"index.html":{}}}],["guard",{"_index":123,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/passport",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["hash",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["hash(createuserdto.password",{"_index":529,"title":{},"body":{"injectables/UsersService.html":{}}}],["health_record.dto",{"_index":314,"title":{},"body":{"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"classes/UpdateHealthRecordDto.html":{}}}],["health_record.dto.ts",{"_index":236,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/UpdateHealthRecordDto.html":{},"coverage.html":{}}}],["health_record.dto.ts:10",{"_index":243,"title":{},"body":{"classes/CreateHealthRecordDto.html":{}}}],["health_record.dto.ts:14",{"_index":245,"title":{},"body":{"classes/CreateHealthRecordDto.html":{}}}],["health_record.dto.ts:18",{"_index":244,"title":{},"body":{"classes/CreateHealthRecordDto.html":{}}}],["health_record.dto.ts:22",{"_index":247,"title":{},"body":{"classes/CreateHealthRecordDto.html":{}}}],["health_record.dto.ts:6",{"_index":248,"title":{},"body":{"classes/CreateHealthRecordDto.html":{}}}],["health_records.controller",{"_index":337,"title":{},"body":{"modules/HealthRecordsModule.html":{}}}],["health_records.service",{"_index":312,"title":{},"body":{"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{}}}],["health_records/health_records.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["healthrecord",{"_index":276,"title":{"classes/HealthRecord.html":{}},"body":{"classes/HealthRecord.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"coverage.html":{}}}],["healthrecord.name",{"_index":340,"title":{},"body":{"modules/HealthRecordsModule.html":{}}}],["healthrecordmodel",{"_index":346,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["healthrecordscontroller",{"_index":301,"title":{"controllers/HealthRecordsController.html":{}},"body":{"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"coverage.html":{}}}],["healthrecordsmodule",{"_index":41,"title":{"modules/HealthRecordsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthRecordsModule.html":{},"modules.html":{},"overview.html":{}}}],["healthrecordsschema",{"_index":299,"title":{},"body":{"classes/HealthRecord.html":{},"modules/HealthRecordsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["healthrecordsservice",{"_index":311,"title":{"injectables/HealthRecordsService.html":{}},"body":{"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"coverage.html":{},"overview.html":{}}}],["here",{"_index":629,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpexception('user",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["https://nestjs.com",{"_index":636,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["httpstatus.not_found",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpstatus.ok",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["httpstatus.unauthorized",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":297,"title":{},"body":{"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":387,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":67,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":352,"title":{},"body":{"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel('healthrecord",{"_index":353,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["injectmodel('masterservice",{"_index":444,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["injectmodel(user.name",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":596,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":599,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":168,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":169,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotempty()@isemail",{"_index":164,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotempty()@isstring()@minlength(5)@maxlength(20",{"_index":166,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["isnotempty()@minlength(5)@maxlength(20",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":170,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":242,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{}}}],["join",{"_index":625,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.guard",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt.guard.ts",{"_index":451,"title":{},"body":{"injectables/PassportJwtAuthGuard.html":{},"coverage.html":{}}}],["jwt_secret_key",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":385,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":179,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":633,"title":{},"body":{"index.html":{}}}],["last_name",{"_index":265,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":639,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":615,"title":{},"body":{"index.html":{}}}],["line",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["literal",{"_index":246,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/HealthRecord.html":{},"injectables/JwtStrategy.html":{}}}],["local",{"_index":396,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.guard",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["local.guard.ts",{"_index":453,"title":{},"body":{"injectables/PassportLocalGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":180,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindata",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.dto",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.dto.ts",{"_index":161,"title":{},"body":{"classes/AuthLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:12",{"_index":165,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["login.dto.ts:18",{"_index":167,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["logindata",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginwithpassport",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginwithpassport(@currentuser",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginwithpassport(user",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["massage",{"_index":532,"title":{},"body":{"injectables/UsersService.html":{}}}],["master_service.dto",{"_index":422,"title":{},"body":{"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"classes/UpdateMasterServiceDto.html":{}}}],["master_service.dto.ts",{"_index":255,"title":{},"body":{"classes/CreateMasterServiceDto.html":{},"classes/UpdateMasterServiceDto.html":{},"coverage.html":{}}}],["master_service.dto.ts:10",{"_index":259,"title":{},"body":{"classes/CreateMasterServiceDto.html":{}}}],["master_service.dto.ts:14",{"_index":257,"title":{},"body":{"classes/CreateMasterServiceDto.html":{}}}],["master_service.dto.ts:6",{"_index":258,"title":{},"body":{"classes/CreateMasterServiceDto.html":{}}}],["master_services.controller",{"_index":432,"title":{},"body":{"modules/MasterServicesModule.html":{}}}],["master_services.service",{"_index":421,"title":{},"body":{"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{}}}],["master_services/master_services.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["masterservice",{"_index":399,"title":{"classes/MasterService.html":{}},"body":{"classes/MasterService.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"coverage.html":{}}}],["masterservice.name",{"_index":434,"title":{},"body":{"modules/MasterServicesModule.html":{}}}],["masterservicemodel",{"_index":438,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["masterservices",{"_index":449,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["masterserviceschema",{"_index":405,"title":{},"body":{"classes/MasterService.html":{},"modules/MasterServicesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["masterservicescontroller",{"_index":407,"title":{"controllers/MasterServicesController.html":{}},"body":{"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"coverage.html":{}}}],["masterservicesmodule",{"_index":42,"title":{"modules/MasterServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MasterServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["masterservicesservice",{"_index":420,"title":{"injectables/MasterServicesService.html":{}},"body":{"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":171,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateUserDto.html":{}}}],["maxlength(20",{"_index":175,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateUserDto.html":{}}}],["message",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":172,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(5",{"_index":174,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":579,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":614,"title":{},"body":{"index.html":{}}}],["mode",{"_index":605,"title":{},"body":{"index.html":{}}}],["model",{"_index":344,"title":{},"body":{"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":294,"title":{},"body":{"classes/HealthRecord.html":{},"injectables/HealthRecordsService.html":{},"classes/MasterService.html":{},"injectables/MasterServicesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":339,"title":{},"body":{"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":628,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":634,"title":{},"body":{"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":593,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":638,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":458,"title":{},"body":{"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"classes/HealthRecord.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"classes/MasterService.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["node.js",{"_index":585,"title":{},"body":{"index.html":{}}}],["note",{"_index":252,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/HealthRecord.html":{}}}],["notfoundexception",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception('user",{"_index":535,"title":{},"body":{"injectables/UsersService.html":{}}}],["number",{"_index":250,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["open",{"_index":616,"title":{},"body":{"index.html":{}}}],["optional",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":643,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":559,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":310,"title":{},"body":{"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":329,"title":{},"body":{"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":457,"title":{},"body":{"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createhealthrecorddto",{"_index":456,"title":{},"body":{"classes/UpdateHealthRecordDto.html":{}}}],["partialtype(createmasterservicedto",{"_index":460,"title":{},"body":{"classes/UpdateMasterServiceDto.html":{}}}],["partialtype(createuserdto",{"_index":463,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":382,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportjwtauthguard",{"_index":112,"title":{"injectables/PassportJwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/PassportJwtAuthGuard.html":{},"coverage.html":{}}}],["passportlocalguard",{"_index":109,"title":{"injectables/PassportLocalGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/PassportLocalGuard.html":{},"coverage.html":{}}}],["passportmodule",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":379,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":163,"title":{},"body":{"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":418,"title":{},"body":{"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":327,"title":{},"body":{"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["payload",{"_index":378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone_number",{"_index":266,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["please",{"_index":626,"title":{},"body":{"index.html":{}}}],["post",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":607,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":584,"title":{},"body":{"index.html":{}}}],["project",{"_index":617,"title":{},"body":{"index.html":{}}}],["prop",{"_index":284,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["prop({type",{"_index":280,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["prop({unique",{"_index":469,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":162,"title":{"properties.html":{}},"body":{"classes/AuthLoginDto.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["query",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["read",{"_index":627,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["record_by",{"_index":239,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/HealthRecord.html":{}}}],["records",{"_index":240,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{}}}],["reflect",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["refreshtoken",{"_index":466,"title":{},"body":{"classes/User.html":{}}}],["register",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove",{"_index":410,"title":{},"body":{"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":332,"title":{},"body":{"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":367,"title":{},"body":{"injectables/HealthRecordsService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":368,"title":{},"body":{"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":595,"title":{},"body":{"index.html":{}}}],["request",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.headers.authorization",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.user",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":447,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["restuser",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":602,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":531,"title":{},"body":{"injectables/UsersService.html":{}}}],["scalable",{"_index":589,"title":{},"body":{"index.html":{}}}],["schema",{"_index":290,"title":{},"body":{"classes/HealthRecord.html":{},"modules/HealthRecordsModule.html":{},"classes/MasterService.html":{},"modules/MasterServicesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema/health_record.schema",{"_index":338,"title":{},"body":{"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{}}}],["schema/master_service.schema",{"_index":433,"title":{},"body":{"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{}}}],["schema/user.schema",{"_index":501,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["schemafactory",{"_index":291,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(healthrecord",{"_index":300,"title":{},"body":{"classes/HealthRecord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(masterservice",{"_index":406,"title":{},"body":{"classes/MasterService.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":479,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schematypes",{"_index":292,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["schematypes.objectid",{"_index":296,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["secret",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":590,"title":{},"body":{"index.html":{}}}],["services",{"_index":409,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["side",{"_index":591,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"modules/HealthRecordsModule.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"modules/MasterServicesModule.html":{},"injectables/MasterServicesService.html":{},"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":620,"title":{},"body":{"index.html":{}}}],["src/.../current",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../health_record.schema.ts",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../master_service.schema.ts",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:27",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/custom_decorator/current",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth",{"_index":160,"title":{},"body":{"classes/AuthLoginDto.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:10",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/guards/auth.guard.ts:13",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/guards/passport",{"_index":450,"title":{},"body":{"injectables/PassportJwtAuthGuard.html":{},"injectables/PassportLocalGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.stategy.ts",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.stategy.ts:20",{"_index":377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.stategy.ts:8",{"_index":375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":391,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:14",{"_index":395,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":393,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/health_records/dto/create",{"_index":235,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"coverage.html":{}}}],["src/health_records/dto/update",{"_index":455,"title":{},"body":{"classes/UpdateHealthRecordDto.html":{},"coverage.html":{}}}],["src/health_records/health_records.controller.ts",{"_index":302,"title":{},"body":{"controllers/HealthRecordsController.html":{},"coverage.html":{}}}],["src/health_records/health_records.controller.ts:11",{"_index":306,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["src/health_records/health_records.controller.ts:16",{"_index":309,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["src/health_records/health_records.module.ts",{"_index":336,"title":{},"body":{"modules/HealthRecordsModule.html":{}}}],["src/health_records/health_records.service.ts",{"_index":341,"title":{},"body":{"injectables/HealthRecordsService.html":{},"coverage.html":{}}}],["src/health_records/health_records.service.ts:15",{"_index":347,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["src/health_records/health_records.service.ts:24",{"_index":348,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["src/health_records/health_records.service.ts:38",{"_index":350,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["src/health_records/health_records.service.ts:9",{"_index":345,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["src/health_records/schema/health_record.schema.ts",{"_index":277,"title":{},"body":{"classes/HealthRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health_records/schema/health_record.schema.ts:10",{"_index":289,"title":{},"body":{"classes/HealthRecord.html":{}}}],["src/health_records/schema/health_record.schema.ts:13",{"_index":285,"title":{},"body":{"classes/HealthRecord.html":{}}}],["src/health_records/schema/health_record.schema.ts:16",{"_index":287,"title":{},"body":{"classes/HealthRecord.html":{}}}],["src/health_records/schema/health_record.schema.ts:19",{"_index":286,"title":{},"body":{"classes/HealthRecord.html":{}}}],["src/health_records/schema/health_record.schema.ts:31",{"_index":288,"title":{},"body":{"classes/HealthRecord.html":{}}}],["src/health_records/schema/health_record.schema.ts:7",{"_index":283,"title":{},"body":{"classes/HealthRecord.html":{}}}],["src/main.ts",{"_index":553,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/master_services/dto/create",{"_index":254,"title":{},"body":{"classes/CreateMasterServiceDto.html":{},"coverage.html":{}}}],["src/master_services/dto/update",{"_index":459,"title":{},"body":{"classes/UpdateMasterServiceDto.html":{},"coverage.html":{}}}],["src/master_services/master_services.controller.ts",{"_index":408,"title":{},"body":{"controllers/MasterServicesController.html":{},"coverage.html":{}}}],["src/master_services/master_services.controller.ts:19",{"_index":412,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["src/master_services/master_services.controller.ts:24",{"_index":413,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["src/master_services/master_services.controller.ts:29",{"_index":414,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["src/master_services/master_services.controller.ts:34",{"_index":417,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["src/master_services/master_services.controller.ts:42",{"_index":415,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["src/master_services/master_services.module.ts",{"_index":431,"title":{},"body":{"modules/MasterServicesModule.html":{}}}],["src/master_services/master_services.service.ts",{"_index":435,"title":{},"body":{"injectables/MasterServicesService.html":{},"coverage.html":{}}}],["src/master_services/master_services.service.ts:15",{"_index":439,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["src/master_services/master_services.service.ts:26",{"_index":440,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["src/master_services/master_services.service.ts:30",{"_index":441,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["src/master_services/master_services.service.ts:34",{"_index":443,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["src/master_services/master_services.service.ts:38",{"_index":442,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["src/master_services/master_services.service.ts:9",{"_index":437,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["src/master_services/schema/master_service.schema.ts",{"_index":400,"title":{},"body":{"classes/MasterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/master_services/schema/master_service.schema.ts:10",{"_index":403,"title":{},"body":{"classes/MasterService.html":{}}}],["src/master_services/schema/master_service.schema.ts:13",{"_index":404,"title":{},"body":{"classes/MasterService.html":{}}}],["src/master_services/schema/master_service.schema.ts:16",{"_index":402,"title":{},"body":{"classes/MasterService.html":{}}}],["src/master_services/schema/master_service.schema.ts:7",{"_index":401,"title":{},"body":{"classes/MasterService.html":{}}}],["src/users/dto/create",{"_index":261,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":462,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schema/user.schema.ts",{"_index":465,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/schema/user.schema.ts:10",{"_index":471,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:13",{"_index":472,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:16",{"_index":476,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:19",{"_index":470,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:22",{"_index":474,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:25",{"_index":468,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:28",{"_index":473,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:31",{"_index":475,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:7",{"_index":467,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:19",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:24",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:34",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:39",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":499,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":383,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/users/users.service.ts",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:45",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:49",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:57",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:61",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":603,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":606,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":608,"title":{},"body":{"index.html":{}}}],["started",{"_index":583,"title":{"index.html":{}},"body":{}}],["starter",{"_index":594,"title":{},"body":{"index.html":{}}}],["statements",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["stay",{"_index":630,"title":{},"body":{"index.html":{}}}],["strategies/jwt.stategy",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":381,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthLoginDto.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":533,"title":{},"body":{"injectables/UsersService.html":{}}}],["super",{"_index":384,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":621,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":641,"title":{},"body":{"modules.html":{}}}],["table",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":610,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":613,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":612,"title":{},"body":{"index.html":{}}}],["tests",{"_index":609,"title":{},"body":{"index.html":{}}}],["text",{"_index":298,"title":{},"body":{"classes/HealthRecord.html":{}}}],["thanks",{"_index":619,"title":{},"body":{"index.html":{}}}],["then((datas",{"_index":360,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["then((response",{"_index":446,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.authenticate",{"_index":398,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.authenticate(logindata",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.healthrecordmodel.create(createhealthrecorddto",{"_index":354,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["this.healthrecordmodel.find",{"_index":359,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["this.healthrecordmodel.findbyid",{"_index":364,"title":{},"body":{"injectables/HealthRecordsService.html":{}}}],["this.healthrecordsservice.create(createhealthrecorddto",{"_index":319,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["this.healthrecordsservice.findall",{"_index":323,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["this.healthrecordsservice.findallbyuserid(user_id",{"_index":321,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["this.healthrecordsservice.findone(+id",{"_index":326,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["this.healthrecordsservice.remove(+id",{"_index":333,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["this.healthrecordsservice.update(+id",{"_index":330,"title":{},"body":{"controllers/HealthRecordsController.html":{}}}],["this.jwtservice.signasync(tokenpayload",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.masterservicemodel.create(createmasterservicedto",{"_index":445,"title":{},"body":{"injectables/MasterServicesService.html":{}}}],["this.masterservicesservice.create(createmasterservicedto",{"_index":424,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["this.masterservicesservice.findall",{"_index":425,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["this.masterservicesservice.findone(+id",{"_index":426,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["this.masterservicesservice.remove(+id",{"_index":428,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["this.masterservicesservice.update(+id",{"_index":427,"title":{},"body":{"controllers/MasterServicesController.html":{}}}],["this.usermodel",{"_index":528,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone(query)).toobject",{"_index":534,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.usersservice.create(createuserdto",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":495,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":494,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["timestamps",{"_index":295,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["token",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tokenpayload",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["tokenpayload.email",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{}}}],["touch",{"_index":631,"title":{},"body":{"index.html":{}}}],["true",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["try",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HealthRecordsService.html":{}}}],["twitter",{"_index":637,"title":{},"body":{"index.html":{}}}],["type",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthLoginDto.html":{},"injectables/AuthService.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MasterService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["types",{"_index":293,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/UpdateHealthRecordDto.html":{},"classes/UpdateMasterServiceDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":279,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["typescript",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["undefined",{"_index":281,"title":{},"body":{"classes/HealthRecord.html":{},"classes/MasterService.html":{},"classes/User.html":{}}}],["unique",{"_index":477,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":251,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/HealthRecord.html":{},"classes/MasterService.html":{},"index.html":{}}}],["unknown",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HealthRecordsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":648,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["update",{"_index":328,"title":{},"body":{"controllers/HealthRecordsController.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":365,"title":{},"body":{"injectables/HealthRecordsService.html":{},"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatehealthrecorddto",{"_index":315,"title":{"classes/UpdateHealthRecordDto.html":{}},"body":{"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{},"classes/UpdateHealthRecordDto.html":{},"coverage.html":{}}}],["updatemasterservicedto",{"_index":416,"title":{"classes/UpdateMasterServiceDto.html":{}},"body":{"controllers/MasterServicesController.html":{},"injectables/MasterServicesService.html":{},"classes/UpdateMasterServiceDto.html":{},"coverage.html":{}}}],["updates",{"_index":366,"title":{},"body":{"injectables/HealthRecordsService.html":{},"injectables/MasterServicesService.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":461,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uri",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(passportjwtauthguard",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(passportjwtauthguard)@get('me",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(passportlocalguard",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":81,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.decorator",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.decorator.ts",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":464,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":262,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":270,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":269,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":268,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:32",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":502,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":241,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/HealthRecord.html":{},"controllers/HealthRecordsController.html":{},"injectables/HealthRecordsService.html":{}}}],["usermodel",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":267,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["usernamefield",{"_index":397,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":500,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/schema/user.schema",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["users/users.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":478,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":480,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["usersmodule",{"_index":43,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":201,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v2",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["v2')@useguards(passportlocalguard",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":394,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":376,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":173,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateHealthRecordDto.html":{},"classes/CreateMasterServiceDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":249,"title":{},"body":{"classes/CreateHealthRecordDto.html":{},"classes/HealthRecord.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":649,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":646,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":604,"title":{},"body":{"index.html":{}}}],["website",{"_index":635,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":598,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":624,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthRecordsModule.html":{},"modules/MasterServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthRecordsModule\n\nHealthRecordsModule\n\nAppModule -->\n\nHealthRecordsModule->AppModule\n\n\n\n\n\nMasterServicesModule\n\nMasterServicesModule\n\nAppModule -->\n\nMasterServicesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthRecordsModule\n                        \n                        \n                            MasterServicesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { HealthRecordsModule } from './health_records/health_records.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MasterServicesModule } from './master_services/master_services.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    HealthRecordsModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    MongooseModule.forRootAsync({\n      useFactory: (configService: ConfigService) => ({\n        uri: configService.getOrThrow('MONGODB_URI'),\n      }),\n      inject: [ConfigService],\n    }),\n    MasterServicesModule,\n    UsersModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Burns API!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getUserInfo\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                loginWithPassport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getUserInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserInfo(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PassportJwtAuthGuard)@Get('me')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginData: AuthLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginData\n                                            \n                                                            AuthLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        loginWithPassport\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginWithPassport(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login-v2')@UseGuards(PassportLocalGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthLoginDto } from './dto/auth-login.dto';\n// import { AuthGuard } from './guards/auth.guard';\nimport { CurrentUser } from './custom_decorator/current-user.decorator';\nimport { User } from '../users/schema/user.schema';\nimport { PassportLocalGuard } from './guards/passport-local.guard';\nimport { PassportJwtAuthGuard } from './guards/passport-jwt.guard';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('login')\n  login(@Body() loginData: AuthLoginDto) {\n    return this.authService.authenticate(loginData);\n  }\n\n  @UseGuards(PassportJwtAuthGuard)\n  @Get('me')\n  getUserInfo(@CurrentUser() user: User) {\n    return user;\n  }\n\n  @Post('login-v2')\n  @UseGuards(PassportLocalGuard)\n  loginWithPassport(@CurrentUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private jwtService: JwtService) {}\n\n  async canActivate(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n    const authorization = request.headers.authorization;\n\n    if (!authorization) {\n      throw new UnauthorizedException();\n    }\n\n    const token = authorization.split(' ')[1];\n\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n\n    try {\n      const tokenPayload = await this.jwtService.verifyAsync(token);\n      request.user = {\n        email: tokenPayload.email,\n      };\n      return true;\n    } catch (e) {\n      throw new UnauthorizedException();\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLoginDto.html":{"url":"classes/AuthLoginDto.html","title":"class - AuthLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-login.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class AuthLoginDto {\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from '../users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './strategies/jwt.stategy';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  imports: [\n    UsersModule,\n    // JwtModule.register({\n    //   global: true,\n    //   secret: JWT_SECRET_KEY,\n    //   signOptions: { expiresIn: '360d' },\n    // }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        global: true,\n        secret: configService.getOrThrow('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: configService.getOrThrow('JWT_ACCESS_TOKEN_EXPIRATION_MS'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    PassportModule,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(data: AuthLoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AuthLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable } from '@nestjs/common';\nimport { AuthLoginDto } from './dto/auth-login.dto';\nimport { UsersService } from '../users/users.service';\nimport { compare } from 'bcryptjs';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly userService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async authenticate(data: AuthLoginDto) {\n    const { email } = data;\n    const user = await this.userService.findOne({\n      email,\n    });\n\n    const authenticated = await compare(data.password, user.password);\n    if (!authenticated) {\n      return {\n        status: HttpStatus.UNAUTHORIZED,\n        message: 'Authentication failed',\n      };\n    }\n\n    const tokenPayload = {\n      email: user.email,\n    };\n\n    const accessToken = await this.jwtService.signAsync(tokenPayload);\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { password, ...restUser } = user;\n\n    return {\n      status: HttpStatus.OK,\n      data: {\n        ...restUser,\n      },\n      accessToken: accessToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHealthRecordDto.html":{"url":"classes/CreateHealthRecordDto.html","title":"class - CreateHealthRecordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHealthRecordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health_records/dto/create-health_record.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                general_note\n                            \n                            \n                                    \n                                    \n                                record_by\n                            \n                            \n                                    \n                                    \n                                records\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/dto/create-health_record.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        general_note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/dto/create-health_record.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        record_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/dto/create-health_record.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/dto/create-health_record.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/dto/create-health_record.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateHealthRecordDto {\n  @IsString()\n  @IsNotEmpty()\n  user_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  date: string;\n\n  @IsString()\n  @IsNotEmpty()\n  record_by: string;\n\n  @IsString()\n  @IsNotEmpty()\n  general_note: string;\n\n  @IsString()\n  @IsNotEmpty()\n  records: { name: string; value: number; unit: string; note: string }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMasterServiceDto.html":{"url":"classes/CreateMasterServiceDto.html","title":"class - CreateMasterServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMasterServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/master_services/dto/create-master_service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/master_services/dto/create-master_service.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/master_services/dto/create-master_service.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/master_services/dto/create-master_service.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateMasterServiceDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  unit: string;\n\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                birthdate\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                phone_number\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsNotEmpty()\n  first_name: string;\n\n  @IsString()\n  last_name: string;\n\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  birthdate: string;\n\n  @IsNotEmpty()\n  phone_number: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthRecord.html":{"url":"classes/HealthRecord.html","title":"class - HealthRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health_records/schema/health_record.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                general_note\n                            \n                            \n                                    \n                                record_by\n                            \n                            \n                                    \n                                records\n                            \n                            \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, auto: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/schema/health_record.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/schema/health_record.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        general_note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/schema/health_record.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        record_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/schema/health_record.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/schema/health_record.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/health_records/schema/health_record.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { SchemaTypes, Types } from 'mongoose';\n\n@Schema({ timestamps: true })\nexport class HealthRecord {\n  @Prop({ type: SchemaTypes.ObjectId, auto: true })\n  _id: Types.ObjectId;\n\n  @Prop()\n  user_id: string;\n\n  @Prop()\n  date: string;\n\n  @Prop()\n  record_by: string;\n\n  @Prop()\n  general_note: string;\n\n  @Prop({\n    type: [\n      {\n        name: { type: String },\n        value: { type: String },\n        unit: { type: String },\n        note: { type: String },\n      },\n    ],\n  })\n  records: { id: string; text: string }[];\n}\n\nexport const HealthRecordsSchema = SchemaFactory.createForClass(HealthRecord);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthRecordsController.html":{"url":"controllers/HealthRecordsController.html","title":"controller - HealthRecordsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthRecordsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health_records/health_records.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                records\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createHealthRecordDto: CreateHealthRecordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/health_records/health_records.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createHealthRecordDto\n                                            \n                                                            CreateHealthRecordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUserId(user_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:user_id')\n                \n            \n\n                    \n                        \n                            Defined in src/health_records/health_records.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { HealthRecordsService } from './health_records.service';\nimport { CreateHealthRecordDto } from './dto/create-health_record.dto';\n// import { UpdateHealthRecordDto } from './dto/update-health_record.dto';\n\n@Controller('records')\nexport class HealthRecordsController {\n  constructor(private readonly healthRecordsService: HealthRecordsService) {}\n\n  @Post()\n  create(@Body() createHealthRecordDto: CreateHealthRecordDto) {\n    return this.healthRecordsService.create(createHealthRecordDto);\n  }\n\n  @Get('user/:user_id')\n  findAllByUserId(@Param('user_id') user_id: string) {\n    return this.healthRecordsService.findAllByUserId(user_id);\n  }\n\n  // @Get()\n  // findAll() {\n  //   return this.healthRecordsService.findAll();\n  // }\n\n  // @Get(':id')\n  // findOne(@Param('id') id: string) {\n  //   return this.healthRecordsService.findOne(+id);\n  // }\n\n  // @Patch(':id')\n  // update(\n  //   @Param('id') id: string,\n  //   @Body() updateHealthRecordDto: UpdateHealthRecordDto,\n  // ) {\n  //   return this.healthRecordsService.update(+id, updateHealthRecordDto);\n  // }\n  //\n  // @Delete(':id')\n  // remove(@Param('id') id: string) {\n  //   return this.healthRecordsService.remove(+id);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthRecordsModule.html":{"url":"modules/HealthRecordsModule.html","title":"module - HealthRecordsModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthRecordsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthRecordsModule\n\n\n\ncluster_HealthRecordsModule_providers\n\n\n\n\nHealthRecordsService\n\nHealthRecordsService\n\n\n\nHealthRecordsModule\n\nHealthRecordsModule\n\nHealthRecordsModule -->\n\nHealthRecordsService->HealthRecordsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health_records/health_records.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HealthRecordsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthRecordsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthRecordsService } from './health_records.service';\nimport { HealthRecordsController } from './health_records.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  HealthRecord,\n  HealthRecordsSchema,\n} from './schema/health_record.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: HealthRecord.name,\n        schema: HealthRecordsSchema,\n      },\n    ]),\n  ],\n  controllers: [HealthRecordsController],\n  providers: [HealthRecordsService],\n})\nexport class HealthRecordsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HealthRecordsService.html":{"url":"injectables/HealthRecordsService.html","title":"injectable - HealthRecordsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HealthRecordsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health_records/health_records.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(HealthRecordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/health_records/health_records.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        HealthRecordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createHealthRecordDto: CreateHealthRecordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/health_records/health_records.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createHealthRecordDto\n                                            \n                                                            CreateHealthRecordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUserId(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/health_records/health_records.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/health_records/health_records.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateHealthRecordDto } from './dto/create-health_record.dto';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { HealthRecord } from './schema/health_record.schema';\n// import { UpdateHealthRecordDto } from './dto/update-health_record.dto';\n\n@Injectable()\nexport class HealthRecordsService {\n  constructor(\n    @InjectModel('HealthRecord')\n    private readonly HealthRecordModel: Model,\n  ) {}\n\n  async create(createHealthRecordDto: CreateHealthRecordDto) {\n    try {\n      await this.HealthRecordModel.create(createHealthRecordDto);\n      return `This action adds a new healthRecord ${createHealthRecordDto}`;\n    } catch (error) {\n      throw new BadRequestException(error);\n    }\n  }\n\n  async findAllByUserId(user_id: string) {\n    try {\n      this.HealthRecordModel.find({ user_id })\n        .then((datas) => {\n          return datas;\n        })\n        .catch((e) => {\n          throw new BadRequestException(e);\n        });\n    } catch (error) {\n      throw new BadRequestException(error);\n    }\n  }\n\n  async findOne(id: string) {\n    return id;\n    // try {\n    //   const datas = await this.HealthRecordModel.findById();\n    //   return `This action returns a #${id} healthRecord`;\n    // } catch (error) {\n    //   throw new BadRequestException(error);\n    // }\n  }\n\n  // update(id: number, updateHealthRecordDto: UpdateHealthRecordDto) {\n  //   return `This action updates a #${id} healthRecord`;\n  // }\n  //\n  // remove(id: number) {\n  //   return `This action removes a #${id} healthRecord`;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.stategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.stategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt.stategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UsersService } from 'src/users/users.service';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    configService: ConfigService,\n    private readonly userService: UsersService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.getOrThrow('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    return this.userService.findOne({ email: payload.email });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/local.strategy.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({\n      usernameField: 'email',\n    });\n  }\n\n  async validate(email: string, password: string) {\n    return this.authService.authenticate({ email, password });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MasterService.html":{"url":"classes/MasterService.html","title":"class - MasterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/master_services/schema/master_service.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, auto: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/master_services/schema/master_service.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/master_services/schema/master_service.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/master_services/schema/master_service.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/master_services/schema/master_service.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { SchemaTypes, Types } from 'mongoose';\n\n@Schema({ timestamps: true })\nexport class MasterService {\n  @Prop({ type: SchemaTypes.ObjectId, auto: true })\n  _id: Types.ObjectId;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  unit: string;\n\n  @Prop()\n  description: string;\n}\n\nexport const MasterServiceSchema = SchemaFactory.createForClass(MasterService);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MasterServicesController.html":{"url":"controllers/MasterServicesController.html","title":"controller - MasterServicesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MasterServicesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/master_services/master_services.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                services\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMasterServiceDto: CreateMasterServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/master_services/master_services.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMasterServiceDto\n                                            \n                                                            CreateMasterServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/master_services/master_services.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/master_services/master_services.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/master_services/master_services.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateMasterServiceDto: UpdateMasterServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/master_services/master_services.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMasterServiceDto\n                                            \n                                                            UpdateMasterServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { MasterServicesService } from './master_services.service';\nimport { CreateMasterServiceDto } from './dto/create-master_service.dto';\nimport { UpdateMasterServiceDto } from './dto/update-master_service.dto';\n\n@Controller('services')\nexport class MasterServicesController {\n  constructor(private readonly masterServicesService: MasterServicesService) {}\n\n  @Post()\n  create(@Body() createMasterServiceDto: CreateMasterServiceDto) {\n    return this.masterServicesService.create(createMasterServiceDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.masterServicesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.masterServicesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateMasterServiceDto: UpdateMasterServiceDto,\n  ) {\n    return this.masterServicesService.update(+id, updateMasterServiceDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.masterServicesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MasterServicesModule.html":{"url":"modules/MasterServicesModule.html","title":"module - MasterServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    MasterServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MasterServicesModule\n\n\n\ncluster_MasterServicesModule_providers\n\n\n\n\nMasterServicesService\n\nMasterServicesService\n\n\n\nMasterServicesModule\n\nMasterServicesModule\n\nMasterServicesModule -->\n\nMasterServicesService->MasterServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/master_services/master_services.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MasterServicesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MasterServicesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MasterServicesService } from './master_services.service';\nimport { MasterServicesController } from './master_services.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  MasterServiceSchema,\n  MasterService,\n} from './schema/master_service.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: MasterService.name,\n        schema: MasterServiceSchema,\n      },\n    ]),\n  ],\n  controllers: [MasterServicesController],\n  providers: [MasterServicesService],\n})\nexport class MasterServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MasterServicesService.html":{"url":"injectables/MasterServicesService.html","title":"injectable - MasterServicesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MasterServicesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/master_services/master_services.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(MasterServiceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/master_services/master_services.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        MasterServiceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMasterServiceDto: CreateMasterServiceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/master_services/master_services.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMasterServiceDto\n                                            \n                                                            CreateMasterServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/master_services/master_services.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/master_services/master_services.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/master_services/master_services.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateMasterServiceDto: UpdateMasterServiceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/master_services/master_services.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMasterServiceDto\n                                            \n                                                            UpdateMasterServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateMasterServiceDto } from './dto/create-master_service.dto';\nimport { UpdateMasterServiceDto } from './dto/update-master_service.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { MasterService } from './schema/master_service.schema';\n\n@Injectable()\nexport class MasterServicesService {\n  constructor(\n    @InjectModel('MasterService')\n    private readonly MasterServiceModel: Model,\n  ) {}\n\n  async create(createMasterServiceDto: CreateMasterServiceDto) {\n    await this.MasterServiceModel.create(createMasterServiceDto)\n      .then((response) => {\n        return response;\n      })\n      .catch((error) => {\n        throw new BadRequestException(error);\n      });\n    // return 'This action adds a new masterService';\n  }\n\n  findAll() {\n    return `This action returns all masterServices`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} masterService`;\n  }\n\n  update(id: number, updateMasterServiceDto: UpdateMasterServiceDto) {\n    return `This action updates a #${id} masterService`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} masterService`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PassportJwtAuthGuard.html":{"url":"injectables/PassportJwtAuthGuard.html","title":"injectable - PassportJwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PassportJwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/passport-jwt.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class PassportJwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PassportLocalGuard.html":{"url":"injectables/PassportLocalGuard.html","title":"injectable - PassportLocalGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PassportLocalGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/passport-local.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class PassportLocalGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHealthRecordDto.html":{"url":"classes/UpdateHealthRecordDto.html","title":"class - UpdateHealthRecordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHealthRecordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health_records/dto/update-health_record.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateHealthRecordDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateHealthRecordDto } from './create-health_record.dto';\n\nexport class UpdateHealthRecordDto extends PartialType(CreateHealthRecordDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMasterServiceDto.html":{"url":"classes/UpdateMasterServiceDto.html","title":"class - UpdateMasterServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMasterServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/master_services/dto/update-master_service.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateMasterServiceDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateMasterServiceDto } from './create-master_service.dto';\n\nexport class UpdateMasterServiceDto extends PartialType(CreateMasterServiceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schema/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                birthdate\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone_number\n                            \n                            \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, auto: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport { SchemaTypes, Types } from 'mongoose';\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ type: SchemaTypes.ObjectId, auto: true })\n  _id: Types.ObjectId;\n\n  @Prop()\n  first_name: string;\n\n  @Prop()\n  last_name: string;\n\n  @Prop()\n  username: string;\n\n  @Prop({ unique: true })\n  email: string;\n\n  @Prop()\n  phone_number: string;\n\n  @Prop()\n  birthdate: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  refreshToken?: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  async create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n  //\n  // @Get(':id')\n  // findOne(@Param('id') id: string) {\n  //   return this.usersService.findOne(+id);\n  // }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { User, UserSchema } from './schema/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: User.name,\n        schema: UserSchema,\n      },\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(UserModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UserModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(query: FilterQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  HttpStatus,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { FilterQuery, Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from './schema/user.schema';\nimport { hash } from 'bcryptjs';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private readonly UserModel: Model,\n  ) {}\n\n  // Register\n  async create(createUserDto: CreateUserDto) {\n    const checkIfUserExist = await this.UserModel.find({\n      email: createUserDto.email,\n    });\n\n    if (!checkIfUserExist) {\n      throw new HttpException('User already exists', HttpStatus.NOT_FOUND);\n    }\n\n    const createUser = await new this.UserModel({\n      ...createUserDto,\n      password: await hash(createUserDto.password, 10),\n    }).save();\n\n    if (createUser) {\n      return {\n        status: HttpStatus.OK,\n        massage: 'Register Successfully',\n      };\n    }\n\n    // return 'This action adds a new user';\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  async findOne(query: FilterQuery) {\n    const user = (await this.UserModel.findOne(query)).toObject();\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/custom_decorator/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/custom_decorator/current-user.decorator.ts\n            \n            variable\n            getCurrentUserByContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-login.dto.ts\n            \n            class\n            AuthLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/passport-jwt.guard.ts\n            \n            injectable\n            PassportJwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/passport-local.guard.ts\n            \n            injectable\n            PassportLocalGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.stategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health_records/dto/create-health_record.dto.ts\n            \n            class\n            CreateHealthRecordDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/health_records/dto/update-health_record.dto.ts\n            \n            class\n            UpdateHealthRecordDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health_records/health_records.controller.ts\n            \n            controller\n            HealthRecordsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health_records/health_records.service.ts\n            \n            injectable\n            HealthRecordsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/health_records/schema/health_record.schema.ts\n            \n            class\n            HealthRecord\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/health_records/schema/health_record.schema.ts\n            \n            variable\n            HealthRecordsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/master_services/dto/create-master_service.dto.ts\n            \n            class\n            CreateMasterServiceDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/master_services/dto/update-master_service.dto.ts\n            \n            class\n            UpdateMasterServiceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/master_services/master_services.controller.ts\n            \n            controller\n            MasterServicesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/master_services/master_services.service.ts\n            \n            injectable\n            MasterServicesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/master_services/schema/master_service.schema.ts\n            \n            class\n            MasterService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/master_services/schema/master_service.schema.ts\n            \n            variable\n            MasterServiceSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/schema/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/users/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-validator : ^0.14.1\n        \n            mongoose : ^8.8.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthRecordsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MasterServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_HealthRecordsModule\n\n\n\ncluster_HealthRecordsModule_providers\n\n\n\ncluster_MasterServicesModule\n\n\n\ncluster_MasterServicesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthRecordsModule\n\nHealthRecordsModule\n\nAppModule -->\n\nHealthRecordsModule->AppModule\n\n\n\n\n\nMasterServicesModule\n\nMasterServicesModule\n\nAppModule -->\n\nMasterServicesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nHealthRecordsService\n\nHealthRecordsService\n\nHealthRecordsModule -->\n\nHealthRecordsService->HealthRecordsModule\n\n\n\n\n\nMasterServicesService\n\nMasterServicesService\n\nMasterServicesModule -->\n\nMasterServicesService->MasterServicesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            getCurrentUserByContext   (src/.../current-user.decorator.ts)\n                        \n                        \n                            HealthRecordsSchema   (src/.../health_record.schema.ts)\n                        \n                        \n                            MasterServiceSchema   (src/.../master_service.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/custom_decorator/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) =>\n    getCurrentUserByContext(context),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserByContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (context: ExecutionContext) =>\n  context.switchToHttp().getRequest().user\n                    \n                \n\n\n        \n    \n\n    src/health_records/schema/health_record.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HealthRecordsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(HealthRecord)\n                    \n                \n\n\n        \n    \n\n    src/master_services/schema/master_service.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MasterServiceSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MasterService)\n                    \n                \n\n\n        \n    \n\n    src/users/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
